###################################
#  rc_master.tcl                  #
#                                 #
#  Author: Alejandro Aguirre      #
#  Description: main script       #
#  Revision 1.0                   #
#  Date: Jun 5, 2014              #
###################################

if {[file exists /proc/cpuinfo]} {
  sh grep "model name" /proc/cpuinfo
  sh grep "cpu MHz"    /proc/cpuinfo
}

puts "Hostname : [info hostname]"

##############################################################################
## Preset global variables and attributes
##############################################################################
source ./config_rc.tcl
source $SCRIPTDIR/rc/rc_master_procs.tcl

set syn_eff $to_gen_eff
set map_eff $to_map_eff
set phys_eff $to_place_eff

set date [clock format [clock seconds] -format "%b%d-%T"] 
set_attribute lib_search_path    "./override $PROJDIR/libraries/lib $PROJDIR/libraries/lef" / 
set_attribute script_search_path "./override $SCRIPTDIR/rc/common $SCRIPTDIR/rc $FILELISTDIR $FILELISTDIR/../constraints/ $PROJDIR/tool_settings/rc" /
include rc_rtl_setup.tcl
set_attribute hdl_search_path    ". $include_paths" /
set_attribute hdl_max_loop_limit 8096
set_attr write_vlog_top_module_first true                 ;# determines whether top module is written first in the Verilog output
applet load measure_snapshot
applet load report_histogram
##set_attribute hdl_use_current_dir_before_hdl_search_path true
#set_attribute gen_module_prefix $design                  
#set_attribute hdl_parameter_naming_style ""              ;# restriction to not use parameters in the module names
#set_attribute uniquify_naming_style %s_%d                ;# uniquify naming style, not much gain in opt
set_attribute hdl_generate_index_style %s_%d_             ;# to replace [ ]  by _ during hdl elaboration
set_attribute hdl_generate_separator _ /                  ;# to replace  .  by _ in generate statements during hdl elaboration
set_attribute auto_ungroup none                           ;# do not autoungroup, user may want use it for special cases
set_attribute hdl_error_on_latch true                     ;# issues an error message if a latch is inferred for a design.
set_attribute hdl_error_on_negedge true                   ;# issues an error message if a design infers a flip-flop that is triggered by a falling clock edge
set_attribute hdl_error_on_logic_abstract true            ;# issues an error message if a logic abstract is inferred for a design

if {${mail_to}==""} {
  set_attribute hdl_error_on_blackbox false               ;#borism memory true
} else {
  set_attribute hdl_error_on_blackbox false
}

# set_attribute hdl_index_mux_threshold 8 ;# minimum number of data inputs the tool requires to implement binary multiplexers instead of AND/OR logic for variable index array references, such as y = x[i].
# set_attribute hdl_max_map_to_mux_control_width 10 ;#maximum size of multiplexers that can be generated by RTL Compiler for HDL case statements that are marked with the map_to_mux pragma. If the width of the case condition, which is implemented as the multiplexer control input, exceeds the value set by this attribute, RTL Compiler will ignore the pragma and generate more efficient logic using AND and OR gates
# set_attribute hdl_max_recursion_limit 1024 ;# maximum number of elaborations for recursive instantiations to prevent possible infinite recursions

#set_attribute hdl_rename_cdn_flop_pins {{q Q} {d D} {clk CP}} ;# Renames the CDN_flop pin name with a new one (pin names from technology) to simplify constraints






## Enabling super-threading.
if { ( [info exist DISTRIBUTED] ) && ( $DISTRIBUTED == 1 ) } {
#    set_attribute super_thread_batch_command {qsub -N RC_job -b y -j y -o /dev/null -e /dev/null} /
#    set_attribute super_thread_kill_command {qdel} /
    set_attribute super_thread_servers {localhost localhost localhost localhost} /
} else {
    set_attribute auto_super_thread false ; # disable the auto-super-thread feature
} 

##Default undriven/unconnected setting is 'none', now set to 0 to avoid floating inputs on design  
set_attribute hdl_unconnected_input_port_value 0 ; # 0 | 1 | x | none /
set_attribute hdl_undriven_output_port_value   0 ; # 0 | 1 | x | none /
set_attribute hdl_undriven_signal_value        0 ; # 0 | 1 | x | none /

## dp_area attribute can degrade QoR inlarge blocks with intevsive datapath
if { $dp_area=="true"} {
set_attribute dp_area_mode true /
}
set_attribute tns_opto true /
set_attribute optimize_constant_0_flops true /
set_attribute optimize_constant_1_flops  true /
set_attribute delete_unloaded_seqs true /

##set_attribute enc_pre_place_opt 1 /                       ;# enables buffer tree deletion in encounter. This has been found to be useful for congested and hard to meet timing designs.
##set_attribute enc_in_place_opt 1 /                        ;# enables inPlaceOpt flow in encounter. This has been found to be useful for congested and hard to meet timing designs.
##set_attribute pqos_placement_effort high /                ;# Controls congestion optimization effort during placeDesign in FE

## Congestion optimization
set_attribute congestion_effort off /                       ;# Set congestion optimization effort to <low, medium or high>
set_attribute qos_report_power true /
set_attribute enc_gzip_interface_files true /
set env(ENCOUNTER) /tools/cadence/edi/14.26.000_Hotfix/Linux/bin/encounter
set_attribute encounter_executable /tools/cadence/edi/14.26.000_Hotfix/Linux/bin/encounter/     ;# Set path to encounter executable to used by synth -to_placed
set_attribute lec_executable /tools/cadence/conformal/12.10.300/Linux/bin/lec /                 ;# Set path to Conformal executable to used by write_do_lec
regexp \[0-9\]+(\.\[0-9\]+) [get_attribute program_version /] exe_ver exe_sub_ver
puts "Executable Version: $exe_ver"

set_attribute information_level 7 /

###############################################################
## Library setup
###############################################################

# The following info message are being supressed
suppress_messages {LBR-83 LBR-40 LBR-408 LBR-41 LBR-101 PHYS-106 PHYS-12 LBR-72 LBR-162 LBR-415 TIM-167 CHNM-102 CHNM-110}
# CHNM-110 warning: failed to change names (mostly ports and instances not desired)
# CHNM-102 info: change name succsesfully

include rc_technology_setup.tcl

##set_attribute congestion_effort <low|medium|high> /
##generates <signal>_reg[<bit_width>] format
#set_attribute hdl_array_naming_style %s\[%d\] /  

## Power root attributes
set_attribute lp_insert_clock_gating true /
#set_attribute lp_clock_gating_prefix <string> /
#set_attribute lp_power_analysis_effort <high> /
set_attribute lp_power_unit mW /
#set_attribute lp_toggle_rate_unit /ns /
set_attribute hdl_track_filename_row_col true /
#set_attribute lp_multi_vt_optimization_effort low /


####################################################################
## Load Design
####################################################################

if {[llength  $v_files] > 0} { read_hdl -v2001 $v_files}
if {[llength $sv_files] > 0} { read_hdl -sv   $sv_files}
catch {redirect -tee -mesg elaborate.log "elaborate $design"} bbox
if {${bbox}==1 && ${mail_to}==""} {
  puts "There are blackboxes in the design. Exiting RTL Compiler..."
  exit
}
print "Runtime & Memory after 'read_hdl'"
timestat Elaboration

# create directory for results
include rc_dir_setup.tcl

# Send mail
include rc_mail.tcl
send_mail elaborate

set_attribute preserve true [find /designs/*/nets -net *] ; # No new cells at top level

#edit_netlist uniquify /designs/$design -verbose        ;# uniquify the netlist after elaboration, do not see big improvement in QoR by enabling this, could be block dependant

check_design -unresolved > ${_reports_path}/check_design_elab.rpt

####################################################################
## Constraints Setup
####################################################################

include ${func.sdc}
if { ${mbist.sdc}!="" } {
include ${mbist.sdc}
}
puts "The number of exceptions is [llength [find /designs/$design -exception *]]"

# Send mail
send_mail constraints

################################################################################################
## read in def file.
################################################################################################

if { [file exist [get_file ${design}_fp.def rc/common]] && $generate_ple} {
      read_def ${design}_fp.def
      set_attribute optimize_merge_flops false /     ; # dont want merging feature  during ple mode generation
      set_attribute optimize_merge_latches false /   ; # dont want merging feature  during ple mode generation
      set_attribute enc_temp_dir ./genple.tmp/rc_enc_pred / ; # will be deleted after generate the ple model
      set_attribute enc_user_mode_file $SCRIPTDIR/rc/common/user_mode.tcl ; # set the tecnology process and others params
      set_attribute enc_force_place_incr false /                ; # an incremental opt is not needed here
      set_attribute enc_cpu_usage 2 
      set_attribute enc_design_mode_process 16 /
      generate_ple_model $design -outfile ./override/$design.ple
      exec rm -rf genple.tmp ${syn_result_path} fv my_local_tmpfile.tcf ; # removing tmp files/dirs 
      puts "PLE model has been generated, removing tmp directories.."
      quit
   } elseif { [file exist [get_file ${design}_fp.def rc/common]] && [file exist [get_file $design.ple rc/common]] } {
      read_def ${design}_fp.def
      decrypt  override/$design.ple; puts "** Running with floorplan & custom PLE model **"
   } elseif { [file exist [get_file ${design}_fp.def rc/common]] && ![file exist [get_file $design.ple rc/common]] } {
      read_def ${design}_fp.def;          puts "** Running with floorplan & default PLE model **"
   } elseif { ![file exist [get_file ${design}_fp.def rc/common]] && [file exist [get_file $design.ple rc/common]] } {
      decrypt  override/$design.ple; puts "** Running without floorplan but with custom PLE model **"
   } else  {
      puts "** Running without floorplan & with default PLE model **"
}

report timing -lint >  ${_reports_path}/lint.rpt


###################################################################################
## Define cost groups (clock-clock, clock-output, input-clock, input-output)
###################################################################################

## Uncomment to remove already existing costgroups before creating new ones.
## rm [find /designs/* -cost_group *]

if { $cost_groups=="true"} {
if {[llength [all::all_seqs]] > 0} { 
  define_cost_group -name I2C -design $design
  define_cost_group -name C2O -design $design
  define_cost_group -name C2C -design $design
  path_group -from [all::all_seqs] -to [all::all_seqs] -group C2C -name C2C
  path_group -from [all::all_seqs] -to [all::all_outs] -group C2O -name C2O
  path_group -from [all::all_inps]  -to [all::all_seqs] -group I2C -name I2C
}

define_cost_group -name I2O -design $design
path_group -from [all::all_inps]  -to [all::all_outs] -group I2O -name I2O
} else {
print "DEFAULT cost groups will be generated"
}

## always use balanced_tree 
set_attribute tree_type balanced_tree [find / -operating_condition *]

# the metal restrictions follows AP placement pesimism (routing layes 4 to 8)
set_attribute number_of_routing_layers 9 /designs/$design
set_attribute utilization 0 [find / -layer M1] /
set_attribute utilization 0 [find / -layer M2] /

foreach cg [find / -cost_group *] {
  report timing -cost_group [list $cg] >> $_reports_path/${design}_pretim.rpt
}
##################################################################################################
## DFT Setup
##################################################################################################
set_attr dft_scan_style muxed_scan /

## Uncomment for clocked_LSSD 
#set_attribute dft_scan_style clocked_lssd_scan /
#define_dft scan_clock_a -name <scanClockAObject> -period <delay in pico sec, default 50000> -rise <integer> -fall <integer> <portOrpin> 
#define_dft scan_clock_b -name <scanClockAObject> -period <delay in pico sec, default 50000> -rise <integer> -fall <integer> <portOrpin> 

# For VDIO customers, it is recommended to set the value of the next two attributes to false.
#set_attribute dft_identify_top_level_test_clocks true /
#set_attribute dft_identify_test_signals true 

set_attr dft_scan_map_mode force_all [find -design *]
set_attr dft_connect_shift_enable_during_mapping  tie_off [find -design *]
set_attr dft_connect_scan_data_pins_during_mapping loopback [find -design *]
set_attribute dft_scan_output_preference non_inverted [find -design *]

set_attribute dft_prefix DFT_ /
# prevent the usage of scan flops inside WTAP subdesigns
if { [find -subdesign *LVISION_WTAP*] ne ""} {
set_attribute dft_dont_scan true [find -subdesign *LVISION_WTAP*]
}
#set_attribute dft_scan_output_preference auto [find -design *]
#define_dft test_mode -name SCAN_EN -active high i_dft_scan_en -create_port
#define_dft test_mode -name SCAN_MODE -active high i_dft_scan_mode -create_port
#set_attr lp_clock_gating_test_signal SCAN_EN [find -design $design]
#
#check_dft_rules > ${_reports_path}/dft_rules.rpt
#report dft_violation > ${_reports_path}/dft_violations.rpt



#######################################################################################
## Leakage/Dynamic power/Clock Gating setup.
#######################################################################################


#set_attribute lp_clock_gating_cell [find /lib* -libcell <cg_libcell_name>] "/designs/$design"
#set_attribute max_leakage_power 0.0 "/designs/$design"
#set_attribute lp_power_optimization_weight <value from 0 to 1> "/designs/$design"
#set_attribute max_dynamic_power <number> "/designs/$design"
#set_attr lp_optimize_dynamic_power_first true "/designs/$design"
## read_tcf <TCF file name>
## read_saif <SAIF file name>
## read_vcd <VCD file name>



#### To turn off sequential merging on the design 
#### uncomment & use the following attributes.
set_attribute optimize_merge_flops false /
set_attribute optimize_merge_latches false /
#### For a particular instance use attribute 'optimize_merge_seqs' to turn off sequential merging. 


####################################################################################################
## Synthesizing to generic 
####################################################################################################

# check fanout
include check_fanout.tcl

synthesize -to_generic -eff $syn_eff
puts "Runtime & Memory after 'synthesize -to_generic'"
timestat GENERIC
check_design -unresolved -unloaded -undriven > ${_reports_path}/check_design_generic.rpt
#report datapath > $_reports_path/${design}_datapath_generic.rpt
## Generate a summary for the current stage of synthesis
## syntax : generate_reports -outdir <out dir> -tag <tag> [-encounter]
## syntax : summary_table -outdir <out dir>
generate_reports -outdir $_reports_path -tag generic 
summary_table -outdir $_reports_path
measure snapshot -depth 2 -name generic -report_dir $_reports_path/html
report slack_histogram -slack_limit 0 -bars 10 -details > $_reports_path/generic_timing_histogram.rpt


####################################################################################################
## Synthesizing to gates
####################################################################################################


synthesize -to_mapped -eff $map_eff -no_incr
puts "Runtime & Memory after 'synthesize -to_map -no_incr'"
generate_reports -outdir $_reports_path -tag map 
summary_table -outdir $_reports_path
measure snapshot -depth 2 -name map -report_dir $_reports_path/html
#write_design -gzip -basename ${_output_path}/map/${design} 
timestat MAPPED
#report datapath > $_reports_path/${design}_datapath_map.rpt
#foreach cg [find / -cost_group *] {
#  report timing -cost_group [list $cg] > $_reports_path/${design}_[basename $cg]_post_map.rpt
#}
report slack_histogram -slack_limit 0 -bars 10 -details > $_reports_path/map_timing_histogram.rpt

##Intermediate netlist for LEC verification..
write_hdl -lec > ${_lec_path}/${design}_intermediate.v
write_do_lec -revised_design ${_lec_path}/${design}_intermediate.v -logfile ${_lec_path}/rtl2intermediate.lec.log > ${_lec_path}/rtl2intermediate.lec.do

## ungroup -threshold <value>


#######################################################################################################
## Incremental Synthesis
#######################################################################################################

## Uncomment to remove assigns & insert tiehilo cells during Incremental synthesis
##set_attribute remove_assigns true /
##set_remove_assign_options -buffer_or_inverter <libcell> -design <design|subdesign> 
##set_attribute use_tiehilo_for_const <none|duplicate|unique> /
if { $incremental_opt_en=="true" } {
set_attribute iopt_ultra_optimization true
set_attribute iopt_force_constant_removal true
set_attribute iopt_enable_floating_output_check true
}


if { $first_incremental =="true" } {
synthesize -to_mapped -eff high -incr
puts "Runtime & Memory after incremental synthesis"
timestat INCREMENTAL

generate_reports -outdir $_reports_path -tag incremental 
summary_table -outdir $_reports_path
measure snapshot -depth 2 -name incremental -report_dir $_reports_path/html
write_design -gzip -basename ${_output_path}/incremental/${design} 

#foreach cg [find / -cost_group -null_ok *] {
#  report timing -cost_group [list $cg] > $_reports_path/${design}_[basename $cg]_post_incr.rpt
#}
report slack_histogram -slack_limit 0 -bars 10 -details > $_reports_path/incr_timing_histogram.rpt
}
#######################################################################################################
## Second Incremental Synthesis
#######################################################################################################
if { $scnd_incremental =="true" } {
## Uncomment to remove assigns & insert tiehilo cells during Incremental synthesis
##set_attribute remove_assigns true /
##set_remove_assign_options -buffer_or_inverter <libcell> -design <design|subdesign> 
##set_attribute use_tiehilo_for_const <none|duplicate|unique> /

synthesize -to_mapped -eff high -incr
puts "Runtime & Memory after incremental synthesis"
timestat INCREMENTAL

generate_reports -outdir $_reports_path -tag incremental2
summary_table -outdir $_reports_path
measure snapshot -depth 2 -name incremental2 -report_dir $_reports_path/html
write_design -gzip -basename ${_output_path}/incremental2/${design}

#foreach cg [find / -cost_group -null_ok *] {
#  report timing -cost_group [list $cg] > $_reports_path/${design}_[basename $cg]_post_incr.rpt
#}
report slack_histogram -slack_limit 0 -bars 10 -details > $_reports_path/incr2_timing_histogram.rpt
}

#####################################################################################################
## QoS Prediction & Optimization.
#####################################################################################################
if {[file exist [get_file ${design}_fp.def rc/common]]} {
#include create_view4edi.tcl
set_attribute enc_temp_dir ${_output_path}/rc_enc_pred /
set_attribute enc_pre_place_opt 1 /
set_attribute enc_in_place_opt 1 /
set_attribute enc_user_mode_file $SCRIPTDIR/rc/common/user_mode.tcl
#set_attribute enc_postload_script ./override/postload.tcl
#set_attribute enc_user_constraint_file ./override/user_views.tcl /
set_attribute enc_cpu_usage 2 /
set_attribute enc_design_mode_process 16 /
synthesize -to_placed -effort $phys_eff
## generate reports to save the encounter stats
generate_reports -outdir $_reports_path -tag plc_enc -encounter
summary_table -outdir $_reports_path
measure snapshot -depth 2 -name place -report_dir $_reports_path/html
report slack_histogram -slack_limit 0 -bars 10 -details > $_reports_path/plc_timing_histogram.rpt
write_design -gzip -basename ${_output_path}/plc/${design} 
}

report clock_gating > $_reports_path/${design}_clockgating.rpt
report power -depth 0 > $_reports_path/${design}_power.rpt
report gates -power > $_reports_path/${design}_gates_power.rpt
report datapath > $_reports_path/${design}_datapath_incr.rpt
report messages > $_reports_path/${design}_messages.rpt
report gates > $_reports_path/${design}_gates.rpt
report messages -all -include_suppressed  > $_reports_path/messages.rpt
report timing -summary -num_paths 4000 -worst 1 -slack_limit 0 > $_reports_path/timing.rpt
exec $SCRIPTDIR/rc/common/gen_summary.py $_reports_path/timing.rpt 
exec mv timing_summary.rpt $_reports_path/timing_summary.rpt

######################################################################################################
## Final: write Encounter file set (verilog, SDC, config, etc.)
######################################################################################################

#Configure allowed characters and add prefix for module names
# update 08/05/2015: removing characters " . [ ] " from the naming rules, because ncsim have problem with these characters durign SDF annotation
#change_names -allowed ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789._\[\]
change_names -allowed ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_
change_names -prefix "${design}_" -subdesign -log_changes ${_log_path}/change_names.log

write_hdl  > ${OUTDATA}/${design}.mapped.v
write_sdc -no_split -exclude "current_design timing_input_port_default_clock case_analysis_sequential_propagation disable_case_analysis group_path set_timing_derate set_driving_cell set_load set_operating_conditions set_max_capacitance set_max_transition  set_max_dynamic_power set_max_leakage_power set_max_area set_clock_gating_check set_clock_latenc set_clock_transition set_clock_transition set_clock_uncertainty set_dont_touch set_dont_use set_units set_ideal_network set_max_fanout set_wire_load_selection_group set_wire_load_model set_resistance" > ${OUTDATA}/${design}.mapped.sdc
# write data to run power analysis
write_sdf -nonegchecks -delimiter "/" -edges check_edge -version "OVI 3.0" > ${OUTDATA}/${design}.max.sdf
write_spef > ${OUTDATA}/${design}.cworst_CCworst.spef

# write script to reproduce the synthesis results
write_script > ${_output_path}/${design}.mapped.script

# write db after adding prefix to the module names
write_design -gzip -basename ${_output_path}/final/${design}

#################################
### write_do_lec
#################################


write_do_lec -golden_design ${_lec_path}/${design}_intermediate.v -revised_design ${OUTDATA}/${design}.mapped.v -logfile  ${_lec_path}/intermediate2final.lec.log > ${_lec_path}/intermediate2final.lec.do
##Uncomment if the RTL is to be compared with the final netlist..
##write_do_lec -revised_design ${OUTDATA}/${design}.mapped.v -logfile ${_lec_path}/rtl2final.lec.log > ${_lec_path}/rtl2final.lec.do

# Send mail
send_mail final

# check unregister IO ports and add the report into the html files
include rc_io_regs.tcl

puts "Final Runtime & Memory."
timestat FINAL
puts "============================"
puts "Synthesis Finished ........."
puts "============================"

file copy [get_attr stdout_log /] ${_log_path}/.

quit
